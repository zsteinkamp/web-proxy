worker_processes  1;

load_module modules/ngx_http_js_module.so;

events {
  worker_connections  1024;
}

http {
  js_path "/usr/lib/nginx/njs_modules/";
  js_fetch_trusted_certificate /etc/ssl/certs/ISRG_Root_X1.pem;
  js_import acme from acme.js;
  resolver 10.1.1.1 ipv6=off;
  resolver_timeout 5s;

  include       mime.types;
  default_type  application/octet-stream;

  sendfile        on;

  keepalive_timeout  65;

  server {
    listen 80;
    listen [::]:80;
    server_name musics.lan;

    location / {
      proxy_pass http://linux:3141/;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_buffering off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  server {
    listen 80;
    listen [::]:80;
    server_name grafana.lan;

    location / {
      proxy_pass http://grafana:9000/;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_buffering off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  server {
    listen 80;
    listen [::]:80;
    server_name prometheus.lan;

    location / {
      proxy_pass http://prometheus:9090/;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_buffering off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  server {
    listen 80;
    listen [::]:80;
    server_name portainer.lan;

    location / {
      proxy_pass http://portainer:6000/;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_buffering off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  server {
    listen 80 default_server;
    listen [::]:80;
    server_name _;

    location /.well-known/acme-challenge/ {
      js_content acme.challengeResponse;
    }

    location = /acme/auto {
      js_content acme.clientAutoMode;
    }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    server_name steinkamp.us home.steinkamp.us;

    js_set $dynamic_ssl_cert acme.js_cert;
    js_set $dynamic_ssl_key acme.js_key;
    
    ssl_certificate $dynamic_ssl_cert;
    ssl_certificate_key $dynamic_ssl_key;

    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    location / {
      proxy_pass http://linux.lan:3125;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Host $host;
      proxy_buffering off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  server {
    listen 443 ssl;
    server_name photos.steinkamp.us;

    js_set $dynamic_ssl_cert acme.js_cert;
    js_set $dynamic_ssl_key acme.js_key;
    
    ssl_certificate $dynamic_ssl_cert;
    ssl_certificate_key $dynamic_ssl_key;

    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    location / {
      proxy_pass http://linux.lan:3333/;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Host $host;
      proxy_buffering off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }
}
